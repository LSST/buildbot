Last updated: 12 July 2012

BugList
* clang stack update is not working; exception in ctrl_sched
  (12 Jul 2012)

* Extract buildmaster/slave passwords into python code segment for inline 
  import. Then that new code segment is never installed into git.
  Currently  Passwords are masked when installed in git repository.

BuildBot Implementation Specifics
* Determine what build products, logs, etc should be archived or deleted,
  then implement. Remove: doxy's /tmp files, >1 month doxydocs, ..
  (13 Jan 12: TBD)

* Trigger Package Build on entry of package name should allow previously 
  unknown git package name to be built.  
  (13 Jan 12:  TBD)


* email handling
  * determining the guru recipients via either
    * scons/eups tag per package
    * trac components CC list
  * chosen:  last git modifier & special lsst-build notification list
  (13 Jan 12: MOSTLY DONE; need to add special lsst-build alias)

* for git-change builds, need email failure notification to instigator 
  (12 Jul 2012)

* package_is_special should read from file in <buidlbot>/etc/DoNotProcess.list
  (10 May 2012)

* need new slave to automatically rebuild clang's LSST_HOME stack routinely
  (23 Apr 2012)

* implement a web-for-based user-initiated drpRun using their own manifest.
  (20 apr 2012: need next buildbot's release which has much better form edits))

Winter 2012 Milestones for Buildbot Scripts 
  Extracted: http://dev.lsstcorp.org/trac/wiki/Winter2012/DevelToolRequirements

* Task: Review and rewrite the buildbot scripts to fix the issues below:
  * use ccache,
    * Status: (ON HOLD - looked at this, but set at a low priority
               compared to other tasks).
  * create tickets on failure
    * Status: TBD 

* Task: Check package's ABI against its previous version
  * if changed, rebuild all packages depending on the just-tagged package.
    * Rebuild algorithm is currently implemented such that if a package 
      changes: determine the set of all packages depending on that given 
      package and then rebuild all those.  As per K-T:  "any change in any 
      package, regardless of binary compatibility or incompatibility, 
      results in rebuilds/rereleases of the rest of the stack above it".
    * Status: Done
  * Use of an ABI checker, such as  Linux Foundation LSB Program: 
      abi-compliance-checker, was suggested
      * in ~buildbot/abi-testing/manifests_check/ there are scripts exercising
        abi-compliance-checker on DM manifests
      * Status: unnecessary as per K-T above


========================================================================
========================================================================
========================================================================
Note added: 13 Jan 2012

Google Chromium Buildbot Waterfall Doco:
http://www.chromium.org/developers/testing/chromium-build-infrastructure/tour-of-the-chromium-buildbot

Discusses additional builder configurations which may come of interest to LSST:
 * define incremental builder which builds only  changed packages and other 
   libs which are dependent on those changed packages.
   This is our current 'Full' build scenario
 * define full rebuild builders which start from scratch and build in a 
   totally 'cleaned' environment.  This would just need to add an additional 
   build step to sanitize the environment then then could trigger the 
   incremental builder mentioned above.


Document also provides: definition of terms, a clear description of each build ,etc. Good prototype.
    
========================================================================
========================================================================
========================================================================
